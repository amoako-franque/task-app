{"ast":null,"code":"var _jsxFileName = \"/Users/amoako/Documents/Tuts/Courses/TypeScript/TypeScript Complete Course - Beginner To Advanced + Project 2022/14. Front-end And Backend Integration/project/src/components/taskArea/taskArea.tsx\",\n  _s = $RefreshSig$();\nimport { Alert, Box, Grid, LinearProgress } from '@mui/material';\nimport React, { useContext, useEffect } from 'react';\nimport { useMutation, useQuery } from 'react-query';\nimport { Status } from '../createTaskForm/enums/Status';\nimport { Task } from '../task/task';\nimport { TaskCounter } from '../taskCounter/taskCounter';\nimport { TaskStatusChangedContext } from '../../context';\nimport { countTasks } from './helpers/countTasks';\nimport { format } from 'date-fns';\nimport { sendApiRequest } from '../../helpers/sendApiRequest';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TaskArea = () => {\n  _s();\n  const tasksUpdatedContext = useContext(TaskStatusChangedContext);\n  const {\n    error,\n    isLoading,\n    data,\n    refetch\n  } = useQuery('tasks', async () => {\n    return await sendApiRequest('http://localhost:3200/tasks', 'GET');\n  });\n\n  // update task mutation\n  const updateTaskMutation = useMutation(data => sendApiRequest('http://localhost:3200/tasks', 'PUT', data));\n  useEffect(() => {\n    refetch();\n  }, [tasksUpdatedContext.updated]);\n  useEffect(() => {\n    if (updateTaskMutation.isSuccess) {\n      tasksUpdatedContext.toggle();\n    }\n  }, [updateTaskMutation.isSuccess]);\n  function onStatusChangeHandler(e, id) {\n    updateTaskMutation.mutate({\n      id,\n      status: e.target.checked ? Status.inProgress : Status.todo\n    });\n  }\n  function markCompleteHandler(e, id) {\n    updateTaskMutation.mutate({\n      id,\n      status: Status.completed\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    md: 8,\n    px: 4,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 8,\n      px: 4,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Status Of Your Tasks As On\", ' ', format(new Date(), 'PPPP')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-around\",\n        alignItems: \"center\",\n        md: 10,\n        xs: 12,\n        mb: 8,\n        children: [/*#__PURE__*/_jsxDEV(TaskCounter, {\n          count: data ? countTasks(data, Status.todo) : undefined,\n          status: Status.todo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskCounter, {\n          count: data ? countTasks(data, Status.inProgress) : undefined,\n          status: Status.inProgress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskCounter, {\n          count: data ? countTasks(data, Status.completed) : undefined,\n          status: Status.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        display: \"flex\",\n        flexDirection: \"column\",\n        xs: 10,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: \"There was an error fetching your tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), !error && Array.isArray(data) && data.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"warning\",\n            children: \"You do not have any tasks created yet. Start by creating some tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this) : Array.isArray(data) && data.length > 0 && data.map((each, index) => {\n            return each.status === Status.todo || each.status === Status.inProgress ? /*#__PURE__*/_jsxDEV(Task, {\n              id: each.id,\n              title: each.title,\n              date: new Date(each.date),\n              description: each.description,\n              priority: each.priority,\n              status: each.status,\n              onStatusChange: onStatusChangeHandler,\n              onClick: markCompleteHandler\n            }, index + each.priority, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this) : false;\n          })]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskArea, \"kaN3L7HaHolW+WCWOM8fntxAdS0=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = TaskArea;\nvar _c;\n$RefreshReg$(_c, \"TaskArea\");","map":{"version":3,"names":["Alert","Box","Grid","LinearProgress","React","useContext","useEffect","useMutation","useQuery","Status","Task","TaskCounter","TaskStatusChangedContext","countTasks","format","sendApiRequest","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskArea","_s","tasksUpdatedContext","error","isLoading","data","refetch","updateTaskMutation","updated","isSuccess","toggle","onStatusChangeHandler","e","id","mutate","status","target","checked","inProgress","todo","markCompleteHandler","completed","item","md","px","children","mb","Date","fileName","_jsxFileName","lineNumber","columnNumber","container","display","justifyContent","flexDirection","alignItems","xs","count","undefined","severity","Array","isArray","length","map","each","index","title","date","description","priority","onStatusChange","onClick","_c","$RefreshReg$"],"sources":["/Users/amoako/Documents/Tuts/Courses/TypeScript/TypeScript Complete Course - Beginner To Advanced + Project 2022/14. Front-end And Backend Integration/project/src/components/taskArea/taskArea.tsx"],"sourcesContent":["import {\n  Alert,\n  Box,\n  Grid,\n  LinearProgress,\n} from '@mui/material';\nimport React, {\n  FC,\n  ReactElement,\n  useContext,\n  useEffect,\n} from 'react';\nimport { useMutation, useQuery } from 'react-query';\n\nimport { ITaskApi } from './interfaces/ITaskApi';\nimport { IUpdateTask } from '../createTaskForm/interfaces/IUpdateTask';\nimport { Status } from '../createTaskForm/enums/Status';\nimport { Task } from '../task/task';\nimport { TaskCounter } from '../taskCounter/taskCounter';\nimport { TaskStatusChangedContext } from '../../context';\nimport { countTasks } from './helpers/countTasks';\nimport { format } from 'date-fns';\nimport { sendApiRequest } from '../../helpers/sendApiRequest';\n\nexport const TaskArea: FC = (): ReactElement => {\n  const tasksUpdatedContext = useContext(\n    TaskStatusChangedContext,\n  );\n\n  const { error, isLoading, data, refetch } = useQuery(\n    'tasks',\n    async () => {\n      return await sendApiRequest<ITaskApi[]>(\n        'http://localhost:3200/tasks',\n        'GET',\n      );\n    },\n  );\n\n  // update task mutation\n  const updateTaskMutation = useMutation(\n    (data: IUpdateTask) =>\n      sendApiRequest(\n        'http://localhost:3200/tasks',\n        'PUT',\n        data,\n      ),\n  );\n\n  useEffect(() => {\n    refetch();\n  }, [tasksUpdatedContext.updated]);\n\n  useEffect(() => {\n    if (updateTaskMutation.isSuccess) {\n      tasksUpdatedContext.toggle();\n    }\n  }, [updateTaskMutation.isSuccess]);\n\n  function onStatusChangeHandler(\n    e: React.ChangeEvent<HTMLInputElement>,\n    id: string,\n  ) {\n    updateTaskMutation.mutate({\n      id,\n      status: e.target.checked\n        ? Status.inProgress\n        : Status.todo,\n    });\n  }\n\n  function markCompleteHandler(\n    e:\n      | React.MouseEvent<HTMLButtonElement>\n      | React.MouseEvent<HTMLAnchorElement>,\n    id: string,\n  ) {\n    updateTaskMutation.mutate({\n      id,\n      status: Status.completed,\n    });\n  }\n\n  return (\n    <Grid item md={8} px={4}>\n      <Box mb={8} px={4}>\n        <h2>\n          Status Of Your Tasks As On{' '}\n          {format(new Date(), 'PPPP')}\n        </h2>\n      </Box>\n      <Grid\n        container\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <Grid\n          item\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-around\"\n          alignItems=\"center\"\n          md={10}\n          xs={12}\n          mb={8}\n        >\n          <TaskCounter\n            count={\n              data\n                ? countTasks(data, Status.todo)\n                : undefined\n            }\n            status={Status.todo}\n          />\n          <TaskCounter\n            count={\n              data\n                ? countTasks(data, Status.inProgress)\n                : undefined\n            }\n            status={Status.inProgress}\n          />\n          <TaskCounter\n            count={\n              data\n                ? countTasks(data, Status.completed)\n                : undefined\n            }\n            status={Status.completed}\n          />\n        </Grid>\n        <Grid\n          item\n          display=\"flex\"\n          flexDirection=\"column\"\n          xs={10}\n          md={8}\n        >\n          <>\n            {error && (\n              <Alert severity=\"error\">\n                There was an error fetching your tasks\n              </Alert>\n            )}\n\n            {!error &&\n              Array.isArray(data) &&\n              data.length === 0 && (\n                <Alert severity=\"warning\">\n                  You do not have any tasks created yet.\n                  Start by creating some tasks\n                </Alert>\n              )}\n\n            {isLoading ? (\n              <LinearProgress />\n            ) : (\n              Array.isArray(data) &&\n              data.length > 0 &&\n              data.map((each, index) => {\n                return each.status === Status.todo ||\n                  each.status === Status.inProgress ? (\n                  <Task\n                    key={index + each.priority}\n                    id={each.id}\n                    title={each.title}\n                    date={new Date(each.date)}\n                    description={each.description}\n                    priority={each.priority}\n                    status={each.status}\n                    onStatusChange={onStatusChangeHandler}\n                    onClick={markCompleteHandler}\n                  />\n                ) : (\n                  false\n                );\n              })\n            )}\n          </>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}